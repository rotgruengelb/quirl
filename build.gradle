//file:noinspection GradlePackageVersionRange
plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
    id 'io.github.juuxel.loom-vineflower' version '1.11.0'
    id 'signing'
}

allprojects {
    apply plugin: "java"
    apply plugin: "fabric-loom"
    apply plugin: "maven-publish"
    apply plugin: "signing"

    group = 'net.rotgruengelb'
    version = "${project.mod_version}+${rootProject.mod_minecraft_base_version}"

    def ENV = System.getenv()
    def publishType = System.getenv("PUBLISH_TYPE")
    def uniqueId = System.getenv("UNIQUE_ID")

    if (publishType == "SNAPSHOT") {
        version = "${version}-${uniqueId}-SNAPSHOT"
    }

    group = rootProject.maven_group

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }

    repositories {
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings "net.fabricmc:yarn:${rootProject.yarn_mappings}:v2"
        modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"
        include(modImplementation(fabricApi.module("fabric-api-base", project.fabric_version)))
        include(modImplementation(fabricApi.module("fabric-command-api-v2", project.fabric_version)))
        include(modImplementation('me.lucko:fabric-permissions-api:0.2-SNAPSHOT'))
    }

    processResources {
        inputs.property "version", project.version
        filteringCharset "UTF-8"

        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }
    }

    def targetJavaVersion = 17
    tasks.withType(JavaCompile).configureEach {
        // ensure that the encoding is set to UTF-8, no matter what the system default is
        // this fixes some edge cases with special characters not displaying correctly
        // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
        // If Javadoc is generated, this must be specified in that task too.
        it.options.encoding = "UTF-8"
        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            it.options.release = targetJavaVersion
        }
    }

    java {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
        withSourcesJar()
        withJavadocJar()
    }

    jar {
	    from("LICENSE") {
		    rename { "${it}_${project.base.archivesName.get()}"}
	    }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId = rootProject.maven_group
                artifactId = 'quirl'
                version = "${version}"
                from components.java

                pom {
                    name = 'quirl'
                    description = 'A Minecraft FabricMC utility Mod and Library containing tools that help with adding to existing Minecraft mechanics.'
                    url = 'https://github.com/rotgruengelb/quirl'
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://opensource.org/license/MIT'
                        }
                    }
                    developers {
                        developer {
                            id = 'rotgruengelb'
                            name = 'Daniel (aka. rotgruengelb)'
                            email = 'rotgrungelblab@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/rotgruengelb/quirl.git'
                        developerConnection = 'scm:git:ssh://github.com/rotgruengelb/quirl.git'
                        url = 'https://github.com/rotgruengelb/quirl/'
                    }
                }
            }
        }

        repositories {
            maven {
                name = "OSSRH"
                url = System.getenv("OSSRH_URL")
                credentials {
                    username = System.getenv("OSSRH_USERNAME")
                    password = System.getenv("OSSRH_PASSWORD")
                }
            }
        }
    }
    
    signing {
        sign publishing.publications.mavenJava
    }


    javadoc {
        if(JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }
}

